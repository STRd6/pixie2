- @title = "Pixel Editor"
- @fullscreen = true

- width = @width || 64
- height = @height || 64

:sass
  .editor.pixie
    padding-top: 40px

    .opacity
      top: -7px

%section#pixie

#optionsModal{ :style => 'display: none' }

- content_for :javascript do
  :coffeescript
    $("html").dropImageReader
      callback: ({file, event}) ->
        canvas.fromDataURL(event.target.result)

    $("html").pasteImageReader
      callback: ({file, event}) ->
        canvas.fromDataURL(event.target.result)

    (($) ->
      postImage = ->
        notify "Saving, please wait..."

        postData =
          'format': 'json'
          'sprite[width]': canvas.width()
          'sprite[height]': canvas.height()
          'sprite[parent_id]': #{@parent_id.to_json}
          'sprite[file_base64_encoded]': canvas.toBase64()
          'sprite[replay_data]': JSON.stringify(canvas.getReplayData())

        $.post '/sprites', postData, (data) ->
          if data.redirect
            window.location = data.redirect
          else
            notify "Saved as <a href='/sprites/" + data.sprite.id + "'>" + (data.sprite.title || ('Sprite ' + data.sprite.id)) + "</a>"

          trackPageview "/event/save_drawing"
          canvas.dirty(false)
          $(".tool.button[title=Save]").removeAttr("disabled")
        , "json"

      pixie = Pixie.Editor.Pixel.create
        width: #{width}
        height: #{height}
        pixelSize: 8
        initializer: (canvas) ->
          # HAX: Global ref of canvas
          window.canvas = canvas

          canvas.addAction
            name: "replay"
            perform: (canvas) ->
              canvas.replay()
            undoable: false

          canvas.addAction
            name: "download"
            hotkeys: ["ctrl+s"]
            perform: (canvas) ->
              w = window.open()
              w.document.location = canvas.toDataURL()
            undoable: false

          canvas.addAction
            name: "save"
            perform: (canvas) ->
              $(".tool.button[title=Save]").attr("disabled", true)
              postImage()
            undoable: false

          canvas.addAction
            name: "Post to Chat"
            icon: "/assets/icons/picture_go.png" # TODO: Get image back
            perform: (canvas) ->
              $('#chat_zone').addClass('visible')

              $("#chat_zone iframe").get(0).contentWindow.postMessage
                method: "post"
                params: [canvas.toDataURL()]
              , "*"

          imageToPixelData = (img) ->
            {width, height} = img

            c = document.createElement("canvas")
            c.width = width
            c.height = height

            context = c.getContext("2d")

            context.drawImage img, 0, 0
            imageData = context.getImageData(0, 0, width, height).data

            result = []

            (width * height).times (i) ->
              x = i * 4
              result[i] = [imageData[x], imageData[x+1], imageData[x+2], imageData[x+3]]

            return [result]

          loadImage = (url, cb) ->
            img = new Image()
            img.crossOrigin = true
            img.onload = ->
              cb(img)
            img.src = url + "?o_0"

          sourceUrl = #{@source_url.to_json}
          parentUrl = #{@parent_url.to_json}
          replayUrl = #{@replay_url.to_json}

          if sourceUrl
            loadImage sourceUrl, (img) ->
              canvas.setInitialState(imageToPixelData(img))

              if parentUrl and replayUrl
                $.getJSON(replayUrl).then (data) ->
                  loadImage parentUrl, (img) ->
                    parentData = imageToPixelData(img)
                    canvas.replay data, parentData
              else if replayUrl
                $.getJSON(replayUrl).then (data) ->
                  canvas.replay data

          window.onbeforeunload = ->
            if canvas.dirty()
              "Your changes haven't yet been saved, if you leave now you will lose your work."

      $("#pixie").replaceWith(pixie)
      window.currentComponent = pixie
    )(jQuery)
