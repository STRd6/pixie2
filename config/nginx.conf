server {
  listen 80;
  server_name pixieengine.com www.pixieengine.com games.pixieengine.com pixie.strd6.com app.strd6.com;
  root /var/www/pixieengine.com/current/public;

  client_max_body_size 15M;

  if ($host !~* "(pixieengine.com|games.pixieengine.com)") {
    rewrite  ^/(.*)$  http://pixieengine.com/$1  permanent;
  }

  # write app specific log
  # make sure you create this file in your log directory before running behind nginx
  access_log  /var/www/pixieengine.com/shared/log/nginx.log;
  error_log   /var/www/pixieengine.com/shared/log/nginx.error.log;

  # Unicorn
  location / {
    try_files /system/maintenance.html $uri $uri/index.html $uri.html @unicorn;
  }

  location @unicorn {
    # an HTTP header important enough to have its own Wikipedia entry:
    #   http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # enable this if and only if you use HTTPS, this helps Rack
    # set the proper protocol for doing redirects:
    # proxy_set_header X-Forwarded-Proto https;

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    proxy_pass http://pixie_unicorn;
  }
}

upstream pixie_unicorn {
  server unix:/var/www/pixieengine.com/shared/sockets/unicorn.sock;
}

server {
  listen 443;

  server_name pixieengine.com;
  root /var/www/pixieengine.com/current/public;

  ssl on;
  ssl_certificate /etc/ssl/pixieengine.com.crt;
  ssl_certificate_key /etc/ssl/pixieengine.com.key;

  client_max_body_size 15M;

  if ($host !~* "(pixieengine.com)") {
    rewrite  ^  $scheme://pixieengine.com$uri  permanent;
  }

  # write app specific log
  # make sure you create this file in your log directory before running behind nginx
  access_log  /var/www/pixieengine.com/shared/log/nginx.log;
  error_log   /var/www/pixieengine.com/shared/log/nginx.error.log;

  location /s3/ {
    proxy_pass http://images.pixie.strd6.com/;
  }

  # Unicorn
  location / {
    try_files /system/maintenance.html $uri $uri/index.html $uri.html @unicorn;
  }

  location @unicorn {
    # an HTTP header important enough to have its own Wikipedia entry:
    #   http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # enable this if and only if you use HTTPS, this helps Rack
    # set the proper protocol for doing redirects:
    proxy_set_header X-Forwarded-Proto $scheme;

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    proxy_pass http://pixie_unicorn;
  }
}
